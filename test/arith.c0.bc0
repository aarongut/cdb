C0 C0 FF EE       # magic number
00 09             # version 4, arch = 1 (64 bits)

00 0F             # int pool count
# int pool
7F FF FF FF
80 00 00 00
80 00 00 00
00 00 00 EB
FF FF FF 05
00 00 32 91
FF FF FF 15
00 0F 23 2C
00 FF 23 52
00 0F 23 2C
00 0F F2 32
00 00 CD 25
00 00 1D 27
00 00 2F 32
00 23 E4 E0

01 16             # string pool total size
# string pool
20 20 20 00  # "   "
20 20 20 00  # "   "
20 20 20 00  # "   "
20 20 20 00  # "   "
20 20 20 00  # "   "
20 20 20 00  # "   "
20 20 20 00  # "   "
00  # ""
20 20 20 00  # "   "
20 20 20 00  # "   "
4D 6F 64 75 6C 75 73 20 74 65 73 74 69 6E 67 20 20 20 00  # "Modulus testing   "
20 20 20 00  # "   "
20 20 20 00  # "   "
20 20 20 00  # "   "
54 65 73 74 69 6E 67 20 63 6F 6E 73 74 61 6E 74 73 20 20 20 00  # "Testing constants   "
20 20 20 00  # "   "
54 65 73 74 69 6E 67 20 69 6E 65 71 75 61 6C 69 74 69 65 73 20 20 20 00  # "Testing inequalities   "
79 31 20 20 00  # "y1  "
6E 31 20 20 00  # "n1  "
79 32 20 20 00  # "y2  "
6E 32 20 20 00  # "n2  "
79 33 20 20 00  # "y3  "
6E 33 20 20 00  # "n3  "
79 34 20 20 00  # "y4  "
6E 34 20 20 00  # "n4  "
79 35 20 20 00  # "y5  "
6E 35 20 20 00  # "n5  "
79 36 20 20 00  # "y6  "
6E 36 20 20 00  # "n6  "
79 37 20 20 00  # "y7  "
6E 37 20 20 00  # "n7  "
54 65 73 74 69 6E 67 20 62 69 74 77 69 73 65 20 6F 70 65 72 61 74 6F 72 73 20 20 20 00  # "Testing bitwise operators   "
20 20 20 00  # "   "
20 20 20 00  # "   "
20 20 20 00  # "   "
20 20 20 00  # "   "
54 65 73 74 69 6E 67 20 62 69 74 20 73 68 69 66 74 69 6E 67 00  # "Testing bit shifting"
20 20 20 00  # "   "
20 20 20 00  # "   "
20 20 20 00  # "   "
20 20 20 00  # "   "
20 20 20 00  # "   "
20 20 20 00  # "   "
00  # ""

00 01             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 06             # number of local variables = 6
02 C5             # code length = 709 bytes
13 00 00 # ildc 0          # c[0] = 2147483647
36 00    # vstore 0        # max = 2147483647;
13 00 01 # ildc 1          # c[1] = -2147483648
36 01    # vstore 1        # min = -(-2147483648);
15 00    # vload 0         # max
10 01    # bipush 1        # 1
60       # iadd            # (max + 1)
36 03    # vstore 3        # y = (max + 1);
15 03    # vload 3         # y
B7 00 00 # invokenative 0  # printint(y)
57       # pop             # (ignore result)
14 00 00 # aldc 0          # s[0] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
15 01    # vload 1         # min
10 01    # bipush 1        # 1
64       # isub            # (min - 1)
36 03    # vstore 3        # y = (min - 1);
15 03    # vload 3         # y
B7 00 00 # invokenative 0  # printint(y)
57       # pop             # (ignore result)
14 00 04 # aldc 4          # s[4] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
10 E7    # bipush -25      # -25
36 02    # vstore 2        # x = -(25);
10 0F    # bipush 15       # 15
36 03    # vstore 3        # y = 15;
15 02    # vload 2         # x
15 03    # vload 3         # y
68       # imul            # (x * y)
B7 00 00 # invokenative 0  # printint((x * y))
57       # pop             # (ignore result)
14 00 08 # aldc 8          # s[8] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
10 F1    # bipush -15      # -15
13 00 02 # ildc 2          # c[2] = -2147483648
68       # imul            # (-(15) * -(-2147483648))
B7 00 00 # invokenative 0  # printint((-(15) * -(-2147483648)))
57       # pop             # (ignore result)
14 00 0C # aldc 12         # s[12] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
10 FB    # bipush -5       # -5
36 02    # vstore 2        # x = -(5);
10 FC    # bipush -4       # -4
36 03    # vstore 3        # y = -(4);
15 02    # vload 2         # x
15 03    # vload 3         # y
60       # iadd            # (x + y)
B7 00 00 # invokenative 0  # printint((x + y))
57       # pop             # (ignore result)
15 02    # vload 2         # x
15 03    # vload 3         # y
64       # isub            # (x - y)
36 04    # vstore 4        # z = (x - y);
14 00 10 # aldc 16         # s[16] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
15 04    # vload 4         # z
B7 00 00 # invokenative 0  # printint(z)
57       # pop             # (ignore result)
14 00 14 # aldc 20         # s[20] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
10 19    # bipush 25       # 25
36 02    # vstore 2        # x = 25;
10 02    # bipush 2        # 2
36 03    # vstore 3        # y = 2;
15 02    # vload 2         # x
15 03    # vload 3         # y
6C       # idiv            # (x / y)
36 04    # vstore 4        # z = (x / y);
15 04    # vload 4         # z
B7 00 00 # invokenative 0  # printint(z)
57       # pop             # (ignore result)
14 00 18 # aldc 24         # s[24] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
14 00 1C # aldc 28         # s[28] = ""
B7 00 02 # invokenative 2  # println("")
57       # pop             # (ignore result)
10 E7    # bipush -25      # -25
36 02    # vstore 2        # x = -(25);
10 02    # bipush 2        # 2
36 03    # vstore 3        # y = 2;
15 02    # vload 2         # x
15 03    # vload 3         # y
6C       # idiv            # (x / y)
36 04    # vstore 4        # z = (x / y);
15 04    # vload 4         # z
B7 00 00 # invokenative 0  # printint(z)
57       # pop             # (ignore result)
14 00 1D # aldc 29         # s[29] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
10 E7    # bipush -25      # -25
36 02    # vstore 2        # x = -(25);
10 FE    # bipush -2       # -2
36 03    # vstore 3        # y = -(2);
15 02    # vload 2         # x
15 03    # vload 3         # y
6C       # idiv            # (x / y)
36 04    # vstore 4        # z = (x / y);
15 04    # vload 4         # z
B7 00 00 # invokenative 0  # printint(z)
57       # pop             # (ignore result)
14 00 21 # aldc 33         # s[33] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
14 00 25 # aldc 37         # s[37] = "Modulus testing   "
B7 00 01 # invokenative 1  # print("Modulus testing   ")
57       # pop             # (ignore result)
13 00 03 # ildc 3          # c[3] = 235
10 20    # bipush 32       # 32
70       # irem            # (235 % 32)
B7 00 00 # invokenative 0  # printint((235 % 32))
57       # pop             # (ignore result)
10 F1    # bipush -15      # -15
10 02    # bipush 2        # 2
70       # irem            # (-(15) % 2)
B7 00 00 # invokenative 0  # printint((-(15) % 2))
57       # pop             # (ignore result)
14 00 38 # aldc 56         # s[56] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
10 05    # bipush 5        # 5
10 06    # bipush 6        # 6
70       # irem            # (5 % 6)
B7 00 00 # invokenative 0  # printint((5 % 6))
57       # pop             # (ignore result)
14 00 3C # aldc 60         # s[60] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
10 05    # bipush 5        # 5
10 FE    # bipush -2       # -2
70       # irem            # (5 % -(2))
B7 00 00 # invokenative 0  # printint((5 % -(2)))
57       # pop             # (ignore result)
14 00 40 # aldc 64         # s[64] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
14 00 44 # aldc 68         # s[68] = "Testing constants   "
B7 00 01 # invokenative 1  # print("Testing constants   ")
57       # pop             # (ignore result)
13 00 04 # ildc 4          # c[4] = -251
36 05    # vstore 5        # constant = -(251);
15 05    # vload 5         # constant
B7 00 00 # invokenative 0  # printint(constant)
57       # pop             # (ignore result)
14 00 59 # aldc 89         # s[89] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
14 00 5D # aldc 93         # s[93] = "Testing inequalities   "
B7 00 02 # invokenative 2  # println("Testing inequalities   ")
57       # pop             # (ignore result)
10 05    # bipush 5        # 5
10 04    # bipush 4        # 4
A3 00 06 # if_icmpgt +6    # if (5 > 4) goto <00:then>
A7 00 0D # goto +13        # goto <01:else>
# <00:then>
14 00 75 # aldc 117        # s[117] = "y1  "
B7 00 01 # invokenative 1  # print("y1  ")
57       # pop             # (ignore result)
A7 00 0A # goto +10        # goto <02:endif>
# <01:else>
14 00 7A # aldc 122        # s[122] = "n1  "
B7 00 01 # invokenative 1  # print("n1  ")
57       # pop             # (ignore result)
# <02:endif>
10 01    # bipush 1        # 1
10 FF    # bipush -1       # -1
A3 00 06 # if_icmpgt +6    # if (1 > -(1)) goto <03:then>
A7 00 0D # goto +13        # goto <04:else>
# <03:then>
14 00 7F # aldc 127        # s[127] = "y2  "
B7 00 01 # invokenative 1  # print("y2  ")
57       # pop             # (ignore result)
A7 00 0A # goto +10        # goto <05:endif>
# <04:else>
14 00 84 # aldc 132        # s[132] = "n2  "
B7 00 01 # invokenative 1  # print("n2  ")
57       # pop             # (ignore result)
# <05:endif>
10 00    # bipush 0        # 0
10 00    # bipush 0        # 0
A2 00 06 # if_icmpge +6    # if (0 >= 0) goto <06:then>
A7 00 0D # goto +13        # goto <07:else>
# <06:then>
14 00 89 # aldc 137        # s[137] = "y3  "
B7 00 01 # invokenative 1  # print("y3  ")
57       # pop             # (ignore result)
A7 00 0A # goto +10        # goto <08:endif>
# <07:else>
14 00 8E # aldc 142        # s[142] = "n3  "
B7 00 01 # invokenative 1  # print("n3  ")
57       # pop             # (ignore result)
# <08:endif>
13 00 05 # ildc 5          # c[5] = 12945
13 00 06 # ildc 6          # c[6] = -235
A1 00 06 # if_icmplt +6    # if (12945 < -(235)) goto <09:then>
A7 00 0D # goto +13        # goto <10:else>
# <09:then>
14 00 93 # aldc 147        # s[147] = "y4  "
B7 00 01 # invokenative 1  # print("y4  ")
57       # pop             # (ignore result)
A7 00 0A # goto +10        # goto <11:endif>
# <10:else>
14 00 98 # aldc 152        # s[152] = "n4  "
B7 00 01 # invokenative 1  # print("n4  ")
57       # pop             # (ignore result)
# <11:endif>
10 05    # bipush 5        # 5
10 05    # bipush 5        # 5
A1 00 06 # if_icmplt +6    # if (5 < 5) goto <12:then>
A7 00 0D # goto +13        # goto <13:else>
# <12:then>
14 00 9D # aldc 157        # s[157] = "y5  "
B7 00 01 # invokenative 1  # print("y5  ")
57       # pop             # (ignore result)
A7 00 0A # goto +10        # goto <14:endif>
# <13:else>
14 00 A2 # aldc 162        # s[162] = "n5  "
B7 00 01 # invokenative 1  # print("n5  ")
57       # pop             # (ignore result)
# <14:endif>
10 FB    # bipush -5       # -5
10 05    # bipush 5        # 5
9F 00 06 # if_cmpeq +6     # if (-(5) == 5) goto <15:then>
A7 00 0D # goto +13        # goto <16:else>
# <15:then>
14 00 A7 # aldc 167        # s[167] = "y6  "
B7 00 01 # invokenative 1  # print("y6  ")
57       # pop             # (ignore result)
A7 00 0A # goto +10        # goto <17:endif>
# <16:else>
14 00 AC # aldc 172        # s[172] = "n6  "
B7 00 01 # invokenative 1  # print("n6  ")
57       # pop             # (ignore result)
# <17:endif>
10 0F    # bipush 15       # 15
10 F1    # bipush -15      # -15
A0 00 06 # if_cmpne +6     # if (15 != -(15)) goto <18:then>
A7 00 0D # goto +13        # goto <19:else>
# <18:then>
14 00 B1 # aldc 177        # s[177] = "y7  "
B7 00 01 # invokenative 1  # print("y7  ")
57       # pop             # (ignore result)
A7 00 0A # goto +10        # goto <20:endif>
# <19:else>
14 00 B6 # aldc 182        # s[182] = "n7  "
B7 00 01 # invokenative 1  # print("n7  ")
57       # pop             # (ignore result)
# <20:endif>
14 00 BB # aldc 187        # s[187] = "Testing bitwise operators   "
B7 00 02 # invokenative 2  # println("Testing bitwise operators   ")
57       # pop             # (ignore result)
13 00 07 # ildc 7          # c[7] = 992044
13 00 08 # ildc 8          # c[8] = 16720722
7E       # iand            # (992044 & 16720722)
B7 00 00 # invokenative 0  # printint((992044 & 16720722))
57       # pop             # (ignore result)
14 00 D8 # aldc 216        # s[216] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
13 00 09 # ildc 9          # c[9] = 992044
13 00 0A # ildc 10         # c[10] = 1045042
80       # ior             # (992044 | 1045042)
B7 00 00 # invokenative 0  # printint((992044 | 1045042))
57       # pop             # (ignore result)
14 00 DC # aldc 220        # s[220] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
13 00 0B # ildc 11         # c[11] = 52517
13 00 0C # ildc 12         # c[12] = 7463
82       # ixor            # (52517 ^ 7463)
B7 00 00 # invokenative 0  # printint((52517 ^ 7463))
57       # pop             # (ignore result)
14 00 E0 # aldc 224        # s[224] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
13 00 0D # ildc 13         # c[13] = 12082
10 FF    # bipush -1       # 
82       # ixor            # ~(12082)
B7 00 00 # invokenative 0  # printint(~(12082))
57       # pop             # (ignore result)
14 00 E4 # aldc 228        # s[228] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
14 00 E8 # aldc 232        # s[232] = "Testing bit shifting"
B7 00 02 # invokenative 2  # println("Testing bit shifting")
57       # pop             # (ignore result)
10 01    # bipush 1        # 1
10 1F    # bipush 31       # 31
78       # ishl            # (1 << 31)
B7 00 00 # invokenative 0  # printint((1 << 31))
57       # pop             # (ignore result)
14 00 FD # aldc 253        # s[253] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
10 17    # bipush 23       # 23
10 05    # bipush 5        # 5
78       # ishl            # (23 << 5)
B7 00 00 # invokenative 0  # printint((23 << 5))
57       # pop             # (ignore result)
14 01 01 # aldc 257        # s[257] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
10 01    # bipush 1        # 1
10 05    # bipush 5        # 5
7A       # ishr            # (1 >> 5)
10 07    # bipush 7        # 7
78       # ishl            # ((1 >> 5) << 7)
B7 00 00 # invokenative 0  # printint(((1 >> 5) << 7))
57       # pop             # (ignore result)
14 01 05 # aldc 261        # s[261] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
13 00 0E # ildc 14         # c[14] = 2352352
10 02    # bipush 2        # 2
7A       # ishr            # (2352352 >> 2)
B7 00 00 # invokenative 0  # printint((2352352 >> 2))
57       # pop             # (ignore result)
14 01 09 # aldc 265        # s[265] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
10 FA    # bipush -6       # -6
10 19    # bipush 25       # 25
64       # isub            # (-(6) - 25)
B7 00 00 # invokenative 0  # printint((-(6) - 25))
57       # pop             # (ignore result)
14 01 0D # aldc 269        # s[269] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
10 06    # bipush 6        # 6
10 19    # bipush 25       # 25
64       # isub            # (6 - 25)
B7 00 00 # invokenative 0  # printint((6 - 25))
57       # pop             # (ignore result)
14 01 11 # aldc 273        # s[273] = "   "
B7 00 01 # invokenative 1  # print("   ")
57       # pop             # (ignore result)
14 01 15 # aldc 277        # s[277] = ""
B7 00 02 # invokenative 2  # println("")
57       # pop             # (ignore result)
10 00    # bipush 0        # 0
B0       # return          # 

00 03             # native count
# native pool
00 01 00 13       # printint
00 01 00 10       # print
00 01 00 14       # println

